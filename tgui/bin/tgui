#!/bin/bash
set -e
shopt -s globstar
shopt -s expand_aliases

## Initial set-up
## --------------------------------------------------------

## Returns an absolute path to file
alias tgui-realpath="readlink -f"

## Fallbacks for GNU readlink
## Detecting GNU coreutils http://stackoverflow.com/a/8748344/319952
if ! readlink --version >/dev/null 2>&1; then
  if hash greadlink 2>/dev/null; then
    alias tgui-realpath="greadlink -f"
  else
    alias tgui-realpath="perl -MCwd -le 'print Cwd::abs_path(shift)'"
  fi
fi

## Find a canonical path to project root
base_dir="$(dirname "$(tgui-realpath "${0}")")/.."
base_dir="$(tgui-realpath "${base_dir}")"

## Make use of nvm if it exists
if [[ -e "${HOME}/.nvm/nvm.sh" ]]; then
  source "${HOME}/.nvm/nvm.sh"
fi

## Fall back to running Yarn from the repo
if ! hash yarn 2>/dev/null; then
  yarn_releases=("${base_dir}"/.yarn/releases/yarn-*.cjs)
  yarn_release="${yarn_releases[0]}"
  yarn() {
    node "${yarn_release}" "${@}"
  }
fi


## Functions
## --------------------------------------------------------

## Installs node modules
task-install() {
  cd "${base_dir}"
  yarn install
}

## Runs webpack
task-webpack() {
  cd "${base_dir}"
  yarn run webpack-cli "${@}"
}

## Runs a development server
task-dev-server() {
  cd "${base_dir}"
  yarn node packages/tgui-dev-server/index.esm.js "${@}"
}

## Run a linter through all packages
task-eslint() {
  cd "${base_dir}"
  yarn run eslint packages "${@}"
}

## Mr. Proper
task-clean() {
  cd "${base_dir}"
  rm -rf packages/tgui/public/.tmp
  ## Build artifacts
  rm -rf public/.tmp
  rm -f public/*.map
  rm -f public/*.bundle.*
  rm -f public/*.hot-update.*
  ## Yarn artifacts
  rm -rf .yarn/cache
  rm -rf .yarn/unplugged
  rm -rf .yarn/build-state.yml
  rm -rf .yarn/install-state.gz
  rm -f .pnp.js
  ## NPM artifacts
  rm -rf **/node_modules
  rm -f **/package-lock.json
}


## Main
## --------------------------------------------------------

if [[ ${1} == "--clean" ]]; then
  task-clean
  exit 0
fi

if [[ ${1} == "--dev" ]]; then
  shift
  task-install
  task-dev-server "${@}"
  exit 0
fi

if [[ ${1} == '--lint' ]]; then
  shift 1
  task-install
  task-eslint "${@}"
  exit 0
fi

if [[ ${1} == '--lint-harder' ]]; then
  shift 1
  task-install
  task-eslint -c .eslintrc-harder.yml "${@}"
  exit 0
fi

if [[ ${1} == '--fix' ]]; then
  shift 1
  task-install
  task-eslint --fix "${@}"
  exit 0
fi

## Analyze the bundle
if [[ ${1} == '--analyze' ]]; then
  task-install
  task-webpack --mode=production --analyze
  exit 0
fi

## Make a production webpack build
if [[ ${1} == '--build' ]]; then
  task-install
  task-webpack --mode=production
  exit 0
fi

## Make a production webpack build + Run eslint
if [[ -z ${1} ]]; then
  task-install
  task-eslint
  task-webpack --mode=production
  exit 0
fi

## Run webpack with custom flags
task-install
task-webpack "${@}"
